{"version":3,"sources":["../src/sw.js"],"names":[],"mappings":";;;;;;;AAAA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,aAAa,GAAG,aAAY;AAClC,MAAM,aAAa,GAAG,UAAS;AAC/B,EAAkB,CAAC,GAAb,KAAK,GAAG,GAAkB;AAChC;AACA,MAAM,oBAAoB,GAAG,OAAO;AACpC,EAAE,SAAS,EAAE,UAAU;AACvB,EAAE,OAAO,EAAE;AACX,IAAI,aAAa,CAAC;AAClB,MAAM,QAAQ,EAAE,EAAE;AAClB,KAAK,CAAC;AACN,IAAI,IAAI,gBAAgB,CAAC;AACzB,MAAM,UAAU,EAAE,EAAE;AACpB,MAAM,iBAAiB,EAAE,IAAI;AAC7B,KAAK,CAAC,CAAC;AACP,CAAC,EAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,CAAC,KAAK,EAAC;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAE;AACb,YAAY,GAAE;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,CAAC,WAAW,EAAE,aAAa,CAAC,aAAa,CAAC,EAAC;AACxD;AACA;AACA,aAAa,CAAC,YAAY,EAAE,IAAI,UAAU,EAAE,EAAC;AAC7C;AACA;AACA,aAAa,CAAC,aAAa,EAAE,IAAI,UAAU,CAAC,oBAAoB,EAAE,CAAC,EAAC;AACpE;AACA;AACA,iBAAiB,CAAC,IAAI,YAAY,CAAC,oBAAoB,EAAE,CAAC,CAAC,CAAC;AAC5D;AACA;AACA,eAAe,CAAC,OAAO,EAAE,KAAK,EAAE,KAAK;AACrC,EAAE,QAAQ,KAAK,CAAC,OAAO,CAAC,WAAW;AACnC,IAAI,KAAK,UAAU;AACnB,MAAM,OAAO,MAAM,aAAa,CAAC,aAAa,CAAC;AAC/C,IAAI,KAAK,OAAO;AAChB,MAAM,OAAO,MAAM,aAAa,CAAC,aAAa,CAAC;AAC/C,IAAI;AACJ,MAAM,OAAO,QAAQ,CAAC,KAAK,EAAE,CAAC;AAC9B,GAAG;AACH,CAAC,EAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,YAAY,CAAC,EAAE,GAAG,EAAE,OAAO,EAAE,EAAE,EAAE,OAAO,GAAG,CAAC,IAAI,KAAK,IAAI,CAAC,QAAQ,CAAC,IAAI,IAAI,OAAO,CAAC,WAAW,IAAI,UAAU,EAAE;AACvH,SAAS,WAAW,CAAC,EAAE,GAAG,EAAE,OAAO,EAAE,EAAE,EAAE,OAAO,GAAG,CAAC,IAAI,KAAK,IAAI,CAAC,QAAQ,CAAC,IAAI,IAAI,OAAO,CAAC,WAAW,KAAK,UAAU,EAAE;AACvH,SAAS,aAAa,CAAC,KAAK,EAAE,EAAE,OAAO,CAAC,CAAC,cAAc,CAAC,KAAK,CAAC","file":"sw.js","sourcesContent":["// @ts-check\r\n\r\nimport { registerRoute, setDefaultHandler, setCatchHandler } from 'workbox-routing';\r\nimport { CacheFirst, NetworkFirst, StaleWhileRevalidate } from 'workbox-strategies';\r\nimport { skipWaiting, clientsClaim } from 'workbox-core';\r\nimport { precacheAndRoute, matchPrecache } from 'workbox-precaching';\r\nimport { ExpirationPlugin } from 'workbox-expiration';\r\nimport { RoutifyPlugin, freshCacheData } from '@sveltech/routify/workbox-plugin'\r\n\r\n\r\n\r\n/**********\r\n * CONFIG *\r\n **********/\r\n\r\nconst entrypointUrl = '__app.html' // entrypoint\r\nconst fallbackImage = '404.svg'\r\nconst files = self.__WB_MANIFEST // files matching globDirectory and globPattern in rollup.config.js\r\n\r\nconst externalAssetsConfig = () => ({\r\n  cacheName: 'external',\r\n  plugins: [\r\n    RoutifyPlugin({\r\n      validFor: 60 // cache is considered fresh for n seconds.\r\n    }),\r\n    new ExpirationPlugin({\r\n      maxEntries: 50, // last used entries will be purged when we hit this limit\r\n      purgeOnQuotaError: true // purge external assets on quota error\r\n    })]\r\n})\r\n\r\n\r\n\r\n\r\n/**************\r\n * INITIALIZE *\r\n **************/\r\n\r\n/**\r\n * precache all files\r\n * remember to precache __app.html and 404.svg if caching of all files is disabled\r\n */\r\nprecacheAndRoute(files)\r\n\r\n/** precache only fallback files */\r\n// precacheAndRoute(files.filter(file =>\r\n//   ['__app.html', '404.svg']\r\n//     .includes(file.url)\r\n// ))\r\n\r\nskipWaiting() // auto update service workers across all tabs when new release is available\r\nclientsClaim() // take control of client without having to wait for refresh\r\n\r\n/** \r\n * manually upgrade service worker by sending a SKIP_WAITING message.\r\n * (remember to disable skipWaiting() above)\r\n */\r\n// addEventListener('message', event => { if (event.data && event.data.type === 'SKIP_WAITING') skipWaiting(); });\r\n\r\n\r\n\r\n/**********\r\n * ROUTES *\r\n **********/\r\n\r\n// serve local pages from the SPA entry point (__app.html)\r\nregisterRoute(isLocalPage, matchPrecache(entrypointUrl))\r\n\r\n// serve local assets from cache first\r\nregisterRoute(isLocalAsset, new CacheFirst())\r\n\r\n// serve external assets from cache if they're fresh\r\nregisterRoute(hasFreshCache, new CacheFirst(externalAssetsConfig()))\r\n\r\n// serve external pages and assets\r\nsetDefaultHandler(new NetworkFirst(externalAssetsConfig()));\r\n\r\n// serve a fallback for 404s if possible or respond with an error\r\nsetCatchHandler(async ({ event }) => {\r\n  switch (event.request.destination) {\r\n    case 'document':\r\n      return await matchPrecache(entrypointUrl)\r\n    case 'image':\r\n      return await matchPrecache(fallbackImage)\r\n    default:\r\n      return Response.error();\r\n  }\r\n})\r\n\r\n\r\n\r\n/**********\r\n * CONDITIONS *\r\n **********/\r\n\r\nfunction isLocalAsset({ url, request }) { return url.host === self.location.host && request.destination != 'document' }\r\nfunction isLocalPage({ url, request }) { return url.host === self.location.host && request.destination === 'document' }\r\nfunction hasFreshCache(event) { return !!freshCacheData(event) }\r\n\r\n/** Example condition */\r\nfunction hasWitheringCache(event) {\r\n  const cache = freshCacheData(event)\r\n  if (cache) {\r\n    const { cachedAt, validFor, validLeft, validUntil } = cache\r\n    // return true if half the fresh time has passed\r\n    return validFor / 2 > validFor - validLeft\r\n  }\r\n}"]}